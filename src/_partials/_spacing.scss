$space: 'auto';

@for $i from 0 through 10 {
  $space: join($space, $i);
}

@for $i from 3 through 100 {
  $space: join($space, $i * 5);
}

$type: (
  'p': 'padding',
  'm': 'margin',
);

@each $query, $breakpoint in $breakpoints {
  $query: addColonAfter($query);

  @include wrapperMediaWidth($breakpoint, null) {
    @each $value in $space {
      $propValue: 0;

      @each $class, $prop in $type {
        // Check if value is string or numeric
        @if ($value == 0 or type-of($value) == 'string') {
          $propValue: #{$value};
        } @else {
          $propValue: #{$value}px;
        }

        // Skip padding: auto
        @if ($class!= 'p' or $value!= 'auto') {
          // Around
          .#{$query}#{$class}-#{$value} {
            #{$prop}: $propValue;
          }

          // Vertical (y)
          .#{$query}#{$class}y-#{$value} {
            #{$prop}-top: $propValue;
            #{$prop}-bottom: $propValue;
          }

          // Horizontal (x)
          .#{$query}#{$class}x-#{$value} {
            #{$prop}-left: $propValue;
            #{$prop}-right: $propValue;
          }

          // Top
          .#{$query}#{$class}t-#{$value} {
            #{$prop}-top: $propValue;
          }

          // Right
          .#{$query}#{$class}r-#{$value} {
            #{$prop}-right: $propValue;
          }

          // Bottom
          .#{$query}#{$class}b-#{$value} {
            #{$prop}-bottom: $propValue;
          }

          // Left
          .#{$query}#{$class}l-#{$value} {
            #{$prop}-left: $propValue;
          }
        }
      }
    }
  }
}
